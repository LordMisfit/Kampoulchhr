// Corpses
class KCDeadMarine : DeadMarine replaces DeadMarine
{
	mixin TSASpawnCheck;
	default
	{
	}
	
	States
	{
		DropChainsaw:
			PLAY N 0 A_SpawnItemEx("Chainsaw");
			goto ItemDrop6+3;
		DropPistol:
			PLAY N 0 A_SpawnItemEx("Pistol");
			goto ItemDrop6+3;
		DropGlock:
			PLAY N 0 A_SpawnItemEx("Glock21");
			goto ItemDrop6+3;
		DropShotgun:
			PLAY N 0 A_SpawnItemEx("Shotgun");
			goto ItemDrop6+3;
		DropSShotgun:
			PLAY N 0 A_SpawnItemEx("SuperShotgun");
			goto ItemDrop6+3;
		DropChaingun:
			PLAY N 0 A_SpawnItemEx("Chaingun");
			goto ItemDrop6+3;
		DropTommyGun:
			PLAY N 0 A_SpawnItemEx("TommyGun");
			goto ItemDrop6+3;
		DropRocket:
			PLAY N 0 A_SpawnItemEx("RocketLauncher");
			goto ItemDrop6+3;
		DropPlasma:
			PLAY N 0 A_SpawnItemEx("PlasmaRifle");
			goto ItemDrop6+3;
		DropDevastator:
			PLAY N 0 A_SpawnItemEx("DevastatorGenerator");
			goto ItemDrop6+3;
		DropDeviation:
			PLAY N 0 A_SpawnItemEx("Deviation");
			goto ItemDrop6+3;
		DropImpalerBow:
			PLAY N 0 A_SpawnItemEx("ImpalerXBow");
			goto ItemDrop6+3;
		DropSawThrower:
			PLAY N 0 A_SpawnItemEx("SawThrower");
			goto ItemDrop6+3;
		DropBFG:
			PLAY N 0 A_SpawnItemEx("BFG9000");
			goto ItemDrop6+3;
		DropTesla:
			PLAY N 0 A_SpawnItemEx("TeslaCannon");
			goto ItemDrop6+3;
		DropBHGen:
			PLAY N 0 A_SpawnItemEx("BHGen");
			goto ItemDrop6+3;
		DropRiotGun:
			PLAY N 0 A_SpawnItemEx("RiotGun");
			goto ItemDrop6+3;
		DropBlasterPistol:
			PLAY N 0 A_SpawnItemEx("BlasterPickup");
			goto ItemDrop6+3;
		DropBlasterRifle:
			PLAY N 0 A_SpawnItemEx("BlasterRifle");
			goto ItemDrop6+3;
		ItemDrop1:
			PLAY N 0 A_SpawnItemEx("GreenArmor");
			goto Idle;
		ItemDrop2:
			PLAY N 0 A_SpawnItemEx("GreenArmor");
			goto Idle;
		ItemDrop3:
			PLAY N 0 A_SpawnItemEx("BlueArmor");
			goto Idle;
		ItemDrop4:
			PLAY N 0 A_SpawnItemEx((random(1,4) <= 1) ? "BlueArmor" : "GreenArmor");
			goto Idle;
		ItemDrop5:
			PLAY N 0 
			{
				if (random(1,64) <= 1) A_SpawnItemEx("CombatPack");
													else A_SpawnItemEx("BackPack");
			}
			goto Idle;
		ItemDrop6:
			PLAY N 0 A_Jump(64, "DropBHGen", "DropBFG", "DropRocket", "DropDevastator", "DropDeviation", "DropSawThrower");
			PLAY N 0 A_Jump(128, "DropPlasma", "DropBlasterRifle", "DropTesla", "DropRocket", "DropChaingun", "DropSShotgun", "DropSawThrower", "DropImpalerBow");
			PLAY N 0 A_Jump(256, "DropPistol", "DropGlock", "DropBlasterPistol", "DropShotgun", "DropSShotgun", "DropChainGun", "DropTommyGun");
			PLAY N 0;
			goto Idle;
		Spawn:
			PLAY N 0;
			PLAY N 0
			{
				if (random(1,65536) <= 1)
				{
					A_TSASpawnMessage();
					return resolvestate("Idle");
				}
				return resolvestate(null);
			}
			PLAY N 0 A_Jump(32, "ItemDrop1", "ItemDrop2", "ItemDrop3", "ItemDrop4", "ItemDrop5", "ItemDrop6");
		Idle:
			PLAY N -1;
			Stop;
	}
}

class KCGibbedMarine : GibbedMarine replaces GibbedMarine
{
	mixin TSASpawnCheck;
	default
	{
	}
	
	States
	{
		DropChainsaw:
			PLAY W 0 A_SpawnItemEx("Chainsaw");
			goto ItemDrop6+3;
		DropPistol:
			PLAY W 0 A_SpawnItemEx("Pistol");
			goto ItemDrop6+3;
		DropGlock:
			PLAY W 0 A_SpawnItemEx("Glock21");
			goto ItemDrop6+3;
		DropShotgun:
			PLAY W 0 A_SpawnItemEx("Shotgun");
			goto ItemDrop6+3;
		DropSShotgun:
			PLAY W 0 A_SpawnItemEx("SuperShotgun");
			goto ItemDrop6+3;
		DropChaingun:
			PLAY W 0 A_SpawnItemEx("Chaingun");
			goto ItemDrop6+3;
		DropTommyGun:
			PLAY W 0 A_SpawnItemEx("TommyGun");
			goto ItemDrop6+3;
		DropRocket:
			PLAY W 0 A_SpawnItemEx("RocketLauncher");
			goto ItemDrop6+3;
		DropPlasma:
			PLAY W 0 A_SpawnItemEx("PlasmaRifle");
			goto ItemDrop6+3;
		DropDevastator:
			PLAY W 0 A_SpawnItemEx("DevastatorGenerator");
			goto ItemDrop6+3;
		DropDeviation:
			PLAY W 0 A_SpawnItemEx("Deviation");
			goto ItemDrop6+3;
		DropImpalerBow:
			PLAY W 0 A_SpawnItemEx("ImpalerXBow");
			goto ItemDrop6+3;
		DropSawThrower:
			PLAY W 0 A_SpawnItemEx("SawThrower");
			goto ItemDrop6+3;
		DropBFG:
			PLAY W 0 A_SpawnItemEx("BFG9000");
			goto ItemDrop6+3;
		DropTesla:
			PLAY W 0 A_SpawnItemEx("TeslaCannon");
			goto ItemDrop6+3;
		DropBHGen:
			PLAY W 0 A_SpawnItemEx("BHGen");
			goto ItemDrop6+3;
		DropRiotGun:
			PLAY W 0 A_SpawnItemEx("RiotGun");
			goto ItemDrop6+3;
		DropBlasterPistol:
			PLAY W 0 A_SpawnItemEx("BlasterPickup");
			goto ItemDrop6+3;
		DropBlasterRifle:
			PLAY W 0 A_SpawnItemEx("BlasterRifle");
			goto ItemDrop6+3;
		ItemDrop1:
			PLAY W 0 A_SpawnItemEx("GreenArmor");
			goto Spawn+3;
		ItemDrop2:
			PLAY W 0 A_SpawnItemEx("GreenArmor");
			goto Spawn+3;
		ItemDrop3:
			PLAY W 0 A_SpawnItemEx("BlueArmor");
			goto Spawn+3;
		ItemDrop4:
			PLAY W 0 A_SpawnItemEx((random(1,4) <= 1) ? "BlueArmor" : "GreenArmor");
			goto Spawn+3;
		ItemDrop5:
			PLAY W 0 
			{
				if (random(1,64) <= 1) A_SpawnItemEx("CombatPack");
													else A_SpawnItemEx("BackPack");
			}
			goto Spawn+3;
		ItemDrop6:
			PLAY W 0 A_Jump(64, "DropBHGen", "DropBFG", "DropRocket", "DropDevastator", "DropDeviation", "DropSawThrower");
			PLAY W 0 A_Jump(128, "DropPlasma", "DropBlasterRifle", "DropTesla", "DropRocket", "DropChaingun", "DropSShotgun", "DropSawThrower", "DropImpalerBow");
			PLAY W 0 A_Jump(256, "DropPistol", "DropGlock", "DropBlasterPistol", "DropShotgun", "DropSShotgun", "DropChainGun", "DropTommyGun");
			PLAY W 0;
			goto Spawn+3;
		Spawn:
			PLAY W 0;
			PLAY W 0
			{
				if (random(1,262144) <= 1)
				{
					A_TSASpawnMessage();
					return resolvestate("Idle");
				}
				return resolvestate(null);
			}
			PLAY W 0 A_Jump(8, "ItemDrop1", "ItemDrop2", "ItemDrop3", "ItemDrop4", "ItemDrop5", "ItemDrop6");
		Idle:
			PLAY W -1;
			Stop;
	}
}

// Doom
class ZombiemanNew : KCCreature { } // Filler for later implementation
class PlasmaGuy : KCCreature { } // Filler for later implementation
class RepeaterZombie : KCCreature { } // Filler for later implementation
class KarasawaGuy : KCCreature { } // Filler for later implementation
class RocketLauncherGuy : KCCreature { } // Filler for later implementation
class ShotgunGuyNew : KCCreature { } // Filler for later implementation
class SuperShotgunGuy : KCCreature { } // Filler for later implementation
class FemaleRailZombie : KCCreature { } // Filler for later implementation
class ChaingunGuyNew : KCCreature { } // Filler for later implementation
class Minigunner : KCCreature { } // Filler for later implementation
class BFGGuy : KCCreature { } // Filler for later implementation
class WolfensteinSSNew : KCCreature { } // Filler for later implementation
class DoomImpNew : KCCreature { } // Filler for later implementation
class DarkImp : KCCreature { } // Filler for later implementation
class STDarkImp : KCCreature { } // Filler for later implementation
class VoidDarkImp : KCCreature { } // Filler for later implementation
class NetherDarkImp : KCCreature { } // Filler for later implementation
class DemonNew : KCCreature { } // Filler for later implementation
class SpectreNew : KCCreature { } // Filler for later implementation
class CacodemonNew : KCCreature { } // Filler for later implementation
class Cacolantern : KCCreature { } // Filler for later implementation
class Abaddon : KCCreature { } // Filler for later implementation
class PainElementalNew : KCCreature { } // Filler for later implementation
class LostSoulNew : KCCreature { } // Filler for later implementation
class LostSoulAnnoying : KCCreature { } // Filler for later implementation
class BetaLostSoul : KCCreature { } // Filler for later implementation
class RevenantNew : KCCreature { } // Filler for later implementation
class DeathIncarnate : KCCreature { } // Filler for later implementation
class HellWarrior : KCCreature { } // Filler for later implementation
class FlyingBalrog : KCCreature { } // Filler for later implementation
class FlyingBalrogDVDS : KCCreature { } // Filler for later implementation
class HellKnightNew : KCCreature { } // Filler for later implementation
class BaronOfHellNew : KCCreature { } // Filler for later implementation
class Belphegor : KCCreature { } // Filler for later implementation
class Cybruiser : KCCreature { } // Filler for later implementation
class ArachnotronNew : KCCreature { } // Filler for later implementation
class RailArachnotron : KCCreature { } // Filler for later implementation
class FusionArachnotron : KCCreature { } // Filler for later implementation
class ArachnotronMK2 : KCCreature { } // Filler for later implementation
class MancubusNew : KCCreature { } // Filler for later implementation
class Hectebus : KCCreature { } // Filler for later implementation
class Daedabus : KCCreature { } // Filler for later implementation
class ArchvileNew : KCCreature { } // Filler for later implementation
class Diabloist : KCCreature { } // Filler for later implementation
class ArchonOfHell : KCCreature { } // Filler for later implementation
class BruiserDemon : KCCreature { } // Filler for later implementation
class PyroDemon : KCCreature { } // Filler for later implementation
class CyberDemonNew : KCCreature { } // Filler for later implementation
class Annihilator : KCCreature { } // Filler for later implementation
class SpiderMastermindNew : KCCreature { } // Filler for later implementation
class Demolisher : KCCreature { } // Filler for later implementation
class HadesSphere : KCCreature { } // Filler for later implementation
class HSOverlord : KCCreature { } // Filler for later implementation
class HadesElemental : KCCreature { } // Filler for later implementation
class HadesOverlord : KCCreature { } // Filler for later implementation
// Heretic
class IceLich : KCCreature { } // Filler for later implementation
class DSparilMountedNew : KCCreature { } // Filler for later implementation
class DSparilUnmountedNew : KCCreature { } // Filler for later implementation
// Hexen
class KoraxNew : KCCreature { } // Filler for later implementation
// Strife
// Custom
class HellCleric : KCCreature { } // Filler for later implementation
class HellClericDVDS : KCCreature { } // Filler for later implementation
class HellClericSpectral : KCCreature { } // Filler for later implementation
class UltraMastermind : KCCreature { } // Filler for later implementation