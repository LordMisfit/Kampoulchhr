// Strife
class StrifeGenBulletTracer : KCBulletTracer
{
	default
	{
		Tag "shot";
		DamageFunction ((Random(1,5) * 3));
		Damagetype "Bullet";
		Radius 1;
		Height 1;
		Mass 5;
		Speed 160; // 80
		PROJECTILE;
		+DONTREFLECT;
		+BLOODSPLATTER;
		+NODAMAGETHRUST;
		RenderStyle "Add";
		Alpha 1.0;
		Scale 0.5;
		decal "BulletChip";
	}
	States
	{
		Spawn:
			TNT1 A 0 NoDelay bright;
		Idle:
			TNT1 A 1 bright A_SpawnTracerTrail("StrifeGenBulletTracerTrail",6,-2.5);
			Loop;
		XDeath:
			TNT1 A 1; //A_SpawnItem("StrifePuff");
			Stop;
		Death:
		Crash:
			TNT1 A 1 A_SpawnItem("StrifePuff");
			Stop;
	}
}
class StrifeGenBulletTracer2 : StrifeGenBulletTracer
{
	default
	{
		Tag "shot";
		DamageFunction ((Random(3,15) * 3));
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay bright;
		Idle:
			TNT1 A 1 bright A_SpawnTracerTrail("StrifeGenBulletTracerTrail",6,-2.5);
			Loop;
		XDeath:
			TNT1 A 1; //A_SpawnItem("StrifePuff");
			Stop;
		Death:
		Crash:
			TNT1 A 1 A_SpawnItem("StrifePuff");
			Stop;
	}
}
class StrifeGenBulletTracerTrail : KCBulletTracerTrail
{
	default
	{
		Radius 1;
		Height 1;
		Speed 0;
		DamageFunction (0);
		Projectile;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
		+NOCLIP;
		+DONTSPLASH;
		Scale 0.5;
		RenderStyle "Add";
	}
	
	States
	{
		Spawn:
			CTAC A 2 bright;
			Stop;
	}
}
class StrifeReaverBulletTracer : KCBulletTracer
{
	default
	{
		Tag "shot";
		DamageFunction ((Random(1,8) * 3));
		Damagetype "Bullet";
		Radius 1;
		Height 1;
		Mass 5;
		Speed 160; // 80
		PROJECTILE;
		+DONTREFLECT;
		+BLOODSPLATTER;
		+NODAMAGETHRUST;
		RenderStyle "Add";
		Alpha 1.0;
		Scale 0.75;
		//decal "BulletChip";
	}
	States
	{
		Spawn:
			TNT1 A 0 NoDelay bright;
		Idle:
			TNT1 A 1 bright A_SpawnTracerTrail("StrifeReaverBulletTracerTrail",6,-2.5);
			Loop;
		XDeath:
			TNT1 A 1; //A_SpawnItem("StrifePuff");
			Stop;
		Death:
		Crash:
			TNT1 A 1 A_SpawnItem("StrifePuff");
			Stop;
	}
}
class StrifeReaverBulletTracer2 : StrifeReaverBulletTracer
{
	default
	{
		Tag "shot";
		DamageFunction ((Random(3,24) * 3));
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay bright;
		Idle:
			TNT1 A 1 bright A_SpawnTracerTrail("StrifeReaverBulletTracerTrail",6,-2.5);
			Loop;
		XDeath:
			TNT1 A 1; //A_SpawnItem("StrifePuff");
			Stop;
		Death:
		Crash:
			TNT1 A 1 A_SpawnItem("StrifePuff");
			Stop;
	}
}
class StrifeReaverBulletTracerTrail : KCBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		Speed 0;
		DamageFunction (0);
		Projectile;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
		+NOCLIP;
		+DONTSPLASH;
		Scale 0.75;
		RenderStyle "Add";
	}
	States
	{
		Spawn:
			CTAC A 2 bright;
			Stop;
	}
}
class StrifeMaulerTracer : KCBulletTracer
{
	default
	{
		Tag "Mauler shot";
		DamageFunction ((Random(1,4) * 2));
		Damagetype "Disintegrate";
		Radius 1;
		Height 1;
		Mass 5;
		Speed 160; // 80
		PROJECTILE;
		+DONTREFLECT;
		+BLOODSPLATTER;
		+NODAMAGETHRUST;
		RenderStyle "Add";
		Alpha 1.0;
		Scale 0.5;
		//decal "BulletChip";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay bright;
		Idle:
			TNT1 A 1 bright A_SpawnTracerTrail("StrifeMaulerTracerTrail",6,-2.5);
			Loop;
		XDeath:
			TNT1 A 1 A_SpawnItem("MaulerPuff");
			Stop;
		Death:
		Crash:
			TNT1 A 1 A_SpawnItem("MaulerPuff");
			Stop;
	}
}
class StrifeMaulerTracer2 : StrifeMaulerTracer
{
	default
	{
		Tag "Mauler shot";
		DamageFunction ((Random(3,12) * 2));
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay bright;
		Idle:
			TNT1 A 1 bright A_SpawnTracerTrail("StrifeMaulerTracerTrail",6,-2.5);
			Loop;
		XDeath:
			TNT1 A 1 A_SpawnItem("MaulerPuff");
			Stop;
		Death:
		Crash:
			TNT1 A 1 A_SpawnItem("MaulerPuff");
			Stop;
	}
}
class StrifeMaulerTracerRetail : StrifeMaulerTracer
{
	default
	{
		Tag "Mauler shot";
		DamageFunction ((Random(1,5) * 3));
	}
}
class StrifeMaulerTracerRetail2 : StrifeMaulerTracerRetail
{
	default
	{
		Tag "Mauler shot";
		DamageFunction ((Random(3,15) * 3));
	}
}
class StrifeMaulerTracerTrail : KCBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		Speed 0;
		DamageFunction (0);
		Projectile;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
		+NOCLIP;
		+DONTSPLASH;
		Scale 0.5;
		RenderStyle "Add";
	}
	
	States
	{
		Spawn:
			GTAC A 2 bright;
			Stop;
	}
}

//
// Custom
class HellCleric : KCCreature
{
	default
	{
		Health 200;
		Speed 12;
		Radius 20;
		Height 64;
		ReactionTime 5;
		PainChance 5;
		Mass 200;
		Monster;
		+FLOORCLIP;
		SeeSound "wolfss/sight";
		AttackSound "brain/cube";
		PainSound "grunt/pain";
		DeathSound "wolfss/death";
		HitObituary "%o was battered by a Hell Cleric.";
		Obituary "%o was burned by a Hell Cleric.";
	}
	States
	{
		Spawn:
			SSWV AB 10 A_Look();
			goto Spawn;
		See:
			SSWV AABBCCDD 3 A_KCChase("Melee","Missile",0,1,3,1,1);
			goto See;
		Pain:
			SSWV H 3;
			SSWV H 3 A_Pain();
			SSWV AABBCCDD 3 A_KCChase("Melee","Missile",0,1,3,1,1);
			goto See;
		Melee:
			SSWV E 4 A_FaceTarget();
			SSWV F 4 Bright A_TroopAttack();
			SSWV G 3 A_FaceTarget();
			SSWV F 4 Bright A_TroopAttack();
			SSWV G 3 A_FaceTarget();
			SSWV F 4 Bright A_TroopAttack();
			SSWV AABBCCDD 3 A_KCChase("Melee","Missile",0,1,3,1,1);
			goto See;
		Missile:
			SSWV E 4 A_FaceTarget();
			SSWV F 4 Bright A_TroopAttack();
			SSWV G 3 A_FaceTarget();
			SSWV F 4 Bright A_TroopAttack();
			SSWV G 3 A_FaceTarget();
			SSWV F 4 Bright A_TroopAttack();
			SSWV AABBCCDD 3 A_KCChase("Melee","Missile",0,1,3,1,1);
			goto See;
		Death:
			SSWV I 5;
			SSWV J 10 A_Scream();
			SSWV K 10 A_Fall();
			SSWV L 10;
			SSWV M -1;
			stop;
		XDeath:
			SSWV N 5;
			SSWV O 5 A_XScream();
			SSWV P 5 A_Fall();
			SSWV QRSTU 5;
			SSWV V -1;
			stop;
		Raise:
			SSWV MLKJI 5;
			SSWV AABBCCDD 3 A_KCChase("Melee","Missile",0,1,3,1,1);
			goto See;
	}
}
// Hell Cleric Shot 1
class HellClericBall : KCProjectile
{
	default
	{
		Tag "Cleric Fireball";
		Radius 6;
		Height 8;
		Scale 1.25;
		Speed 12;
		FastSpeed 24;
		DamageFunction ((32+(random(3,6)*random(9,16)))/4); // 15-32 per shot
		Projectile;
		+RANDOMIZE;
		RenderStyle "Add";
		Alpha 1.0;
		SeeSound "imp/attack";
		DeathSound "imp/shotx";
		DamageType "Fire";
	}
	
	override void PostBeginPlay()
	{
		KCProjectile.PostBeginPlay();
		finaldamagedealt = A_CalcDamageFormula(((32+(random(3,6)*random(9,16)))*0.25),1,0.005,0.3334,0.1667,0.005);
	}
	
	override void Tick()
	{
		KCProjectile.Tick();
		finaldamagedealt = A_CalcDamageFormula(((32+(random(3,6)*random(9,16)))*0.25),1,0.005,0.3334,0.1667,0.005);
	}
	
	states
	{
		Spawn:
			FRB1 A 4 Bright;
			FRB1 B 4 Bright;
			FRB1 C 4 Bright;
			loop;
		Death:
			FRB1 DEFGH 4 Bright;
			stop;
	}
}
// Hell Cleric Shot 2
class HellClericDarkBall : KCProjectile // DarkSeeker
{
	default
	{
		Tag "Cleric Seekerball";
		Radius 8;
		Height 6;
		Scale 1.25;
		Speed 24;
		Fastspeed 48;
		DamageFunction ((24+(random(4,7)*random(9,16)))/4); // 15-34 per shot
		DamageType "Fire";
		+SEEKERMISSILE;
		PROJECTILE;
		SeeSound "imp/attack";
		DeathSound "imp/shotx";
		decal "DoomImpScorch";
	}
	
	override void PostBeginPlay()
	{
		KCProjectile.PostBeginPlay();
		finaldamagedealt = A_CalcDamageFormula(((24+(random(4,7)*random(9,16)))*0.25),1,0.005,0.3334,0.1667,0.005);
	}
	
	override void Tick()
	{
		KCProjectile.Tick();
		finaldamagedealt = A_CalcDamageFormula(((24+(random(4,7)*random(9,16)))*0.25),1,0.005,0.3334,0.1667,0.005);
	}
	
	states
	{
		Spawn:
			FX15 A 0;
			"####" A 2 Bright;
			"####" A 2 Bright;
			"####" B 2 Bright;
			"####" B 2 Bright A_SeekerMissile(10,20);
			"####" C 2 Bright;
			"####" C 2 Bright;
			"####" A 2 Bright;
			"####" A 2 Bright A_SeekerMissile(10,20);
			"####" B 2 Bright;
			"####" B 2 Bright;
			"####" C 2 Bright;
			"####" C 2 Bright A_SeekerMissile(10,20);
			loop;
		Death:
			FX15 DEFG 4 Bright;
			stop;
	}
}
class HellClericDVDS : KCCreature
{
	default
	{
		Tag "Hell Cleric";
		Health 175;
		Radius 20;
		Height 56;
		Mass 150;
		DamageFunction ((3+(11*(random(6,13))))/2); // 69-146 per whack
		Speed 8;
		FastSpeed 16;
		ReactionTime 8;
		Painchance 24;
		Painchance "Melee", 3;
		Painchance "Fist", 3;
		Painchance "Kick", 16;
		DamageFactor "Fire", 0.75;
		DamageFactor "Ice", 1.334;
		DamageFactor "Melee", 0.4;
		DamageFactor "Fist", 0.4;
		DamageFactor "Kick", 0.4;
		Monster;
		+SOLID;
		+FLOORCLIP;
		+DONTHARMCLASS;
		SeeSound "hellcleric/sight";
		PainSound "hellcleric/pain";
		DeathSound "hellcleric/death";
		ActiveSound "hellcleric/active" ;
		Obituary "%o was burned and flamed by a Hell Cleric.";
		HitObituary "%o had %p head bashed in by a Hell Cleric.";
	}
	
	states
	{
		Spawn:
			HELC A 4 A_Look;
			HELC A 4 A_Look;
			Loop;
		See:
			HELC AABBCCDD 2
			{
				if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") > 30) { bAVOIDMELEE = true; } else { bAVOIDMELEE = false; }
				if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(1); }
				user_fastchasetimer++;
				if (user_fastchasetimer >= 1 && user_fastchasetimer <= 2) { user_fastchasetimermax = 16; }
				if (user_fastchasetimer >= 3 && user_fastchasetimer <= 4) { user_fastchasetimermax = 4; }
				if (user_fastchasetimer >= 5 && user_fastchasetimer <= 6) { user_fastchasetimermax = 8; }
				if (user_fastchasetimer >= 7 && user_fastchasetimer <= 8) { user_fastchasetimermax = 2; }
				if (user_fastchasetimer >= 8) { user_fastchasetimer = 0; }
				if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { user_fastchasetimermax /= 2; }
				if (random(1,user_fastchasetimermax) == 1) 
				{
					A_KCChase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST); 
				}
				else
				{
					A_KCChase("Melee","Missile",0,1,3,1,1); 
				}
			}
			loop;

		Melee:
		Missile:
			TNT1 A 0
			{
				A_DynamicMusic();
			}
			HELC E 4 
			{
				if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				else if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") > 45) { A_SetTics(3); }

				user_attacktype = random(1,2);
				user_attacks = 0;
				user_attackmax = 3;
				A_FaceTarget();
			}
		MissileLoop:
			HELC G 4 
			{
				if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				else if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") > 45) { A_SetTics(3); }
				A_FaceTarget();

				user_tempvar1 = 24;
				user_tempvar2 = frandompick(7.5,10.25,10.25,10.25,15,15,15,15,15,15,15,18.75,18.75,18.75,22.5);
				string atktype = "HellClericBall";
				if (user_attacktype == 1) atktype = "HellClericDarkBall";
				
				int baserand = random(6,12);
				int dmg = 7;
				dmg += (12 * baserand);
				dmg *= 0.5;
				if (kc_monsterlevelenabledflags)
				{
					dmg = (7 + (CountInv("MonsterLevel") * 0.035));
					dmg += ((12 * baserand) + (CountInv("MonsterLevel") * (0.06 * baserand)));
					if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") >= 30)
					{
						dmg += (2.334 + (CountInv("MonsterLevel") * 0.001167));
						dmg += ((4 * baserand) + (CountInv("MonsterLevel") * (0.02 * baserand)));
					}
					if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") >= 60)
					{
						dmg += (1.167 + (CountInv("MonsterLevel") * 0.000584));
						dmg += ((2 * baserand) + (CountInv("MonsterLevel") * (0.01 * baserand)));
					}
					dmg *= (1.0 + (CountInv("MonsterLevel") * 0.005));
				}
				dmg *= 0.5;
				
				A_CustomComboAttack(atktype, user_tempvar1, (dmg), "imp/melee", "Melee", true);
				if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") >= random(112,113))
				{
					A_SpawnProjectile(atktype,user_tempvar1,0,(user_tempvar2*1));
					A_SpawnProjectile(atktype,user_tempvar1,0,(user_tempvar2*-1));
					if (CountInv("MonsterLevel") >= 225)
					{
						A_SpawnProjectile(atktype,user_tempvar1,0,(user_tempvar2*2));
						A_SpawnProjectile(atktype,user_tempvar1,0,(user_tempvar2*-2));
					}
				}
				user_attacks += 1;
				A_DynamicMusic();
			}
			HELC F 0
			{
				if (random(1,8) > 1) { if (user_attacks >= user_attackmax) { return resolvestate("See"); } return resolvestate(null); }    
				return resolvestate(null);
			}
			HELC F 3 
			{
				if (kc_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(2); }
				A_FaceTarget();
			}
			loop;

		Pain:
			HELC H 2 A_KCPain(1,random(18,22),8,0,0,25);
			goto See;
		Death:
			HELC I 5;
			HELC J 5 A_Scream();
			HELC K 5;
			HELC L 5 A_NoBlocking();
			HELC M -1;

		XDeath:
			HELC N 5;
			HELC O 5 A_XScream();
			HELC P 5;
			HELC Q 5 A_NoBlocking();
			HELC RSTU 5;
			HELC V -1;

		Ice:
			HELC H 5 A_GenericFreezeDeath();
			HELC H 1 A_FreezeDeathChunks();
			wait;
		
		Raise:
			HELC L 5;
			HELC KJI 5;
			goto See;
	}
}
class HellClericSpectral : HellClericDVDS
{
	default
	{
		Tag "Spectral Hell Cleric";
		+SHADOW
		RenderStyle "OptFuzzy";
		Obituary "%o was burned and flamed by a Spectral Hell Cleric.";
		HitObituary "%o had %p head bashed in by a Spectral Hell Cleric.";
	}
}
// Going Down's Ultra Mastermind [MAP29]
class UltraMastermind : SpiderMastermindNew
{
	default
	{
		Tag "Ultra Mastermind";
		Health 12000;
		Speed 16;
		Radius 64;
		Height 100;
		PainChance 40;
		Mass 1000;
		+FLOORCLIP;
		Monster;
		SeeSound "spider/sight";
		AttackSound "weapons/shotgf";
		PainSound "brain/pain";
		DeathSound "brain/death";
		ActiveSound "demon/active";
		Obituary "%o failed to destroy the Ultra Mastermind.";
	}
	States
	{
		Spawn:
			SSWV AB 10 A_Look();
			Loop;
		See:
			SPID A 0 { user_walksound = 0; }
			SSWV AABBCCDD 3
			{
				user_walksound++;
				if (user_walksound == 1)
				{ 
					if (A_CheckWalkSnd()) A_StartSound("spider/walk",CHAN_BODY); 
				}
				A_KCChase("Melee","Missile",0,1,3,1,1);
				if (user_walksound >= 4) { user_walksound = 0; }
			}
			goto See;
		Pain:
			SSWV E 3;
			SSWV H 3 A_BrainPain();
			SSWV E 10 A_FaceTarget();
			SSWV G 4 A_FatAttack1();
			SSWV F 4 A_FaceTarget();
			SSWV G 4 A_FatAttack2();
			SSWV F 4 A_FaceTarget();
			SSWV G 4 A_SkelMissile();
			SSWV F 4 A_FaceTarget();
			SSWV G 4 A_SkelMissile();
			goto See;
		Missile:
			SSWV EE 10 A_FaceTarget();
			SSWV GE 4 Bright A_CPosAttack();
			SSWV G 1 A_SpidRefire();
			goto Missile+2;
		Death:
			SSWV I 5;
			SSWV N 10 A_BrainScream();
			SSWV O 10 A_Fall();
			SSWV PQRSTU 10;
			SSWV V -1 A_BrainDie();
			stop;
	}
}