// "Meh meh meh!!" - Cherry, JohnSuitePee's Cacodemon Plushy V:
class CCards_Actor_PlushWeaponEx1 : MarineWeapon
{
	Default
	{
		+WEAPON.NOAUTOFIRE;
		+WEAPON.CHEATNOTWEAPON;
		+WEAPON.NO_AUTO_SWITCH;
		+WEAPON.AMMO_OPTIONAL;
		+WEAPON.NOALERT;
		weapon.slotnumber 1;
		Weapon.SelectionOrder 1;
		inventory.pickupsound "";
		inventory.pickupmessage "Picked up a... ?";
		obituary "%o was bopped by a Cacodemon Plushie.";
		Tag "???";
		scale 0.4;
	}

	uint offs;

	States
	{
		Ready:
			CC_P A 10;
			CC_P B 6
			{
				invoker.A_KCAlertMonsters();
				A_StartSound("corruptioncards/squeakytoy", CHAN_WEAPON);
			}
			CC_P A 16;
		ReadyLoop:
			CC_P A 1 A_WeaponReady();
			Loop;
		Deselect:
			CC_P A 1 A_Lower(12);
			Loop;
		Select:
			CC_P AAAAA 1 A_WeaponOffset(0, -12, WOF_ADD);
			CC_P AAAAAAAA 1 A_WeaponOffset(0, -6, WOF_ADD);//A_Raise;
			Goto Ready;
		Fire:
			CC_P BBBBBBBBBBBBBBBBBBBAAAA 1
			{
				A_WeaponOffset(Max(0, 4 - invoker.offs),Max(1, 7 - invoker.offs),WOF_ADD);
				invoker.offs++;
			}
			CC_P A 0 
			{
				if (A_CheckBerserk()) A_FireProjectile("CCards_Actor_ThrownPlushExB", 0, 0, 0, 0, FPF_NOAUTOAIM);
				else A_FireProjectile("CCards_Actor_ThrownPlushEx", 0, 0, 0, 0, FPF_NOAUTOAIM);
				
				invoker.Destroy();
			}
			stop;
		Spawn:
			CC_P C -1;
			Stop;
	}
}

class CCards_Actor_ThrownPlushEx : KCFastProjectile
{
	int dmg;
	Default
	{
		PROJECTILE;
		damagefunction (dmg);
		speed 50;
		-NOGRAVITY;
		scale 0.4;
		+ROLLSPRITE;
		+ROLLCENTER;
		+FORCEXYBILLBOARD;
		radius 8;
	}
	
	override void PostBeginPlay()
	{
		actor playera = players[0].mo;
		let MiscItem = PlayerStatItem(playera.FindInventory("PlayerStatItem"));
		dmg = 1;
		if (MiscItem) dmg *= MiscItem.PlayerLevel;
		dmg *= random(1,8);
		super.PostBeginPlay();
	}
	
	states
	{
		Spawn:
		CC_P C 1
		{
			roll += 22;
		}
		loop;
		Death:
		TNT1 A 0;
		CC_P C 0
		{
			string nm = "CCards_Actor_ThrownPlushFX";
			A_StopSound(CHAN_6);
			A_StartSound("corruptioncards/illusionbreak", CHAN_6);

			for(int i; i < 32; i++)
			{
				A_SpawnItemEx(nm, 0, 0, 0, frandom(2, 12), 0, frandom(-8, 8), random(0,360), SXF_NOCHECKPOSITION);
			}
			A_SetTranslation("CCards_Mist");
			bNOGRAVITY = true;
		}
		C_F0 GHI 3;
		stop;
	}

	override void BeginPlay()
	{
		A_StartSound("corruptioncards/squeakytoy", CHAN_6);
	}
}

class CCards_Actor_ThrownPlushExB : CCards_Actor_ThrownPlushEx
{
	Default
	{
		PROJECTILE;
		damagefunction (dmg);
		speed 250;
		-NOGRAVITY;
		scale 0.4;
		+ROLLSPRITE;
		+ROLLCENTER;
		+FORCEXYBILLBOARD;
		radius 8;
	}
	
	override void PostBeginPlay()
	{
		actor playera = players[0].mo;
		let MiscItem = PlayerStatItem(playera.FindInventory("PlayerStatItem"));
		dmg = 10;
		if (MiscItem) dmg *= MiscItem.PlayerLevel;
		dmg *= random(4,8);
		super.PostBeginPlay();
	}
	
	states
	{
		Spawn:
			CC_P C 1
			{
				roll += 110;
			}
			loop;
		Death:
			TNT1 A 0;
			CC_P C 0
			{
				string nm = "CCards_Actor_ThrownPlushFX";
				A_StopSound(CHAN_6);
				A_StartSound("corruptioncards/illusionbreak", CHAN_6);
				A_StopSound(CHAN_7);
				A_StartSound("corruptioncards/illusionbreak", CHAN_7);
	
				for(int i; i < 64; i++)
				{
					A_SpawnItemEx(nm, 0, 0, 0, frandom(2, 12), 0, frandom(-8, 8), random(0,360), SXF_NOCHECKPOSITION);
				}
				A_SetTranslation("CCards_Mist");
				bNOGRAVITY = true;
			}
			C_F0 GHI 3;
		stop;
	}

	override void BeginPlay()
	{
		A_StartSound("corruptioncards/squeakytoy", CHAN_6);
	}
}

class CCards_Actor_PlushWeaponEx2 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 2; } }
class CCards_Actor_PlushWeaponEx3 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 3; } }
class CCards_Actor_PlushWeaponEx4 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 4; } }
class CCards_Actor_PlushWeaponEx5 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 5; } }
class CCards_Actor_PlushWeaponEx6 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 6; } }
class CCards_Actor_PlushWeaponEx7 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 7; } }
class CCards_Actor_PlushWeaponEx8 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 8; } }
class CCards_Actor_PlushWeaponEx9 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 9; } }
class CCards_Actor_PlushWeaponEx0 : CCards_Actor_PlushWeaponEx1 { Default { weapon.slotnumber 0; } }
